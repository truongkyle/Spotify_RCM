version: '3.0'

services:
  de_mysql:
    image: mysql:8.0
    container_name: de_mysql
    volumes:
      - ./mysql:/var/lib/mysql
    ports:
      - "3307:3306"
    env_file:
      - env
    networks:
      - de_network

  de_psql:
    image: postgres:15 
    container_name: de_psql 
    volumes:
      - ./postgresql:/var/lib/postgresql/data 
    ports:
      - "5432:5432" 
    env_file:
      - env 
    networks:
      - de_network

  minio:
    hostname: minio
    image: "minio/minio" 
    container_name: minio 
    ports:
      - "9001:9001"
      - "9000:9000"
    command: [ "server", "/data", "--console-address", ":9001" ] 
    volumes:
      - ./minio:/data 
    env_file:
      - env 
    networks:
      - de_network
      
  mc:
    image: minio/mc 
    container_name: mc 
    hostname: mc 
    env_file:
      - env
    entrypoint: >
          /bin/sh -c " until (/usr/bin/mc config host add minio http://minio:9000 minio minio123) do echo '...waiting...' && sleep 1; done; /usr/bin/mc mb minio/warehouse; /usr/bin/mc policy set public minio/warehouse; exit 0; "
    depends_on: 
      - minio
    networks:
      - de_network

  de_airflow:
    build: 
      context: ./dags
      dockerfile: ./Dockerfile
    container_name: de_airflow
    image: de_airflow:latest
    expose:
      - "8080"
    ports:
      - "8080:8080"
    env_file:
      - env
    volumes:
      - ./dags:/opt/airflow/dags
      - ./airflow_data:/tmp
    command: bash -c '(airflow db init && airflow users create --username admin --password admin --firstname Htd --lastname Coserv --role Admin --email kl@gmail.com); airflow webserver & airflow scheduler'

    networks:
      - de_network
      
networks: 
  de_network:
    driver: bridge 
    name: de_network

volumes:
  dags: